class ZendeskController {

    def grailsApplication
    def springSecurityService
    def zendeskSSOService

    def authZendesk() {
        def iat = params.iat
        if(springSecurityService.isLoggedIn()){
            def userClass = grailsApplication.getClassForName(grailsApplication.config.grails.plugins.zendesk.userDomainClassName)
            def user = springSecurityService.getCurrentUser()
            if(userClass.isInstance(user)){
                redirect url:zendeskSSOService.zendeskLoginBackURL(user.id, params.return_to)
                return
            }
        }
        [iat:iat, return_to:params.return_to, error: params.error?:null]
    }

    def logout() {
        def email = params.email
        def external_id = params.external_id
        def kind = params.kind
        def message = params.message
        def domain = grailsApplication.config.grails.plugins.zendesk.domain

        if(springSecurityService.isLoggedIn()){
            session.invalidate()
        }

        [kind:kind, message:message, domain:domain]
    }
}